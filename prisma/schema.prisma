// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users{
  id Int @id @default(autoincrement())
  name String
  lastName String 
  email String @unique
  password String
  state String
  city String
  neighborhood String
  street String 
  number Int
  permission Int

  rating Rating[]
  comments Comments[]
  shopping_cart Shopping_cart[]

  @@map("users")
}

model Parts_size {
  id Int @id @default(autoincrement())
  size String @db.VarChar(2)

  parts_data Parts_data[]
  shopping_cart Shopping_cart[]

  @@map("parts_size")
}

model Clothing_parts {
  id Int @id @default(autoincrement())
  title String @db.VarChar(255)
  price Float
  discount Float
  describe_part String @db.VarChar(1000)
  collection_id Int?
  type_id Int
  product_line_id Int
  date_created DateTime

  collection Collection? @relation(fields: [collection_id], references: [id])
  types Types @relation(fields: [type_id], references: [id])
  product_line Product_line @relation(fields: [product_line_id], references: [id])

  parts_data Parts_data[]
  rating Rating[]
  comments Comments[]
  shopping_cart Shopping_cart[]


  @@map("clothing_parts")
}

model Types {
  id Int @id @default(autoincrement())
  name String

  Clothing_parts Clothing_parts[]

  @@map("types")
}

model Product_line{
  id Int @id @default(autoincrement())
  name String

  clothing_parts Clothing_parts[]

  @@map("product_line")
}

model Parts_color {
  id Int @id @default(autoincrement())
  hexa_decimal String @db.VarChar(16)
  name_color String @db.VarChar(50)

  parts_data Parts_data[]
  shopping_cart Shopping_cart[]

  @@map("parts_color")
}

model Parts_data{
  id Int @id @default(autoincrement())
  qtd_parts Int
  color_id Int
  size_id Int
  part_id Int
  parts_color Parts_color @relation(fields: [color_id], references: [id])
  parts_size Parts_size @relation(fields: [size_id], references: [id])
  clothing_parts Clothing_parts @relation(fields: [part_id], references: [id])

  @@map("parts_data")
}
model Collection{
  id Int @id @default(autoincrement())
  name String
  describe String @db.VarChar(2000)
  date_created DateTime
  background String?

  clothing_parts Clothing_parts[]

  @@map("collection")
}

model Rating{
  id Int @id @default(autoincrement())
  clothing_id Int
  user_id Int
  note Int

  clothing_parts Clothing_parts @relation(fields: [clothing_id], references: [id])
  users Users @relation(fields: [user_id], references: [id])

  @@map("rating")
}

model Comments {
  id Int @id @default(autoincrement())
  clothing_id Int
  user_id Int
  comment String @db.VarChar(5000)

  clothing_parts Clothing_parts @relation(fields: [clothing_id], references: [id])
  users Users @relation(fields: [user_id], references: [id])

  @@map("comments")
}

model Shopping_cart{
  id Int @id @default(autoincrement())
  user_id Int
  clothing_id Int
  color_id Int
  size_id Int
  qtd_parts Int

  users Users @relation(fields: [user_id], references: [id])
  clothing_parts Clothing_parts @relation(fields: [clothing_id], references: [id])
  parts_color Parts_color @relation(fields: [color_id], references: [id])
  parts_size Parts_size @relation(fields: [size_id], references: [id])

  @@map("shopping_cart")
}